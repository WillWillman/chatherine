name: Publish to NPM
description: Publishes a package to npm registry
inputs:
  WORKING_DIRECTORY:
    description: The WORKING_DIRECTORY to run publish from
    required: true
    default: chathy
  NPM_TOKEN:
    description: NPM token for authentication
    required: true
  APPEND_TAG:
    description: Tag to append to the version (such as latest, next, pre-release)
    required: true
    default: pre-release
  ACCESS:
    description: Access level for the package (public or default or private)
    required: true
    default: public

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        registry-url: https://registry.npmjs.org

    - name: Publish ${{ inputs.WORKING_DIRECTORY }} to npm
      shell: bash
      working-directory: ${{ inputs.WORKING_DIRECTORY }}
      env:
        npm_config_tag: ${{ inputs.APPEND_TAG }}
        npm_config_access: ${{ inputs.ACCESS }}
        NODE_AUTH_TOKEN: ${{ inputs.NPM_TOKEN }}
      run: npm publish

    - name: Remove pre-release tag
      if: ${{ inputs.APPEND_TAG != 'latest' && inputs.APPEND_TAG != 'next' }}
      continue-on-error: true
      shell: bash
      working-directory: ${{ inputs.WORKING_DIRECTORY }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.NPM_TOKEN }}
      run: |
        PACKAGE_NAME=$(npm pkg get name | grep -o '[^"]\+' | head -1)
        npm dist-tag rm $PACKAGE_NAME pre-release

    - name: Remove next tag
      if: ${{ inputs.APPEND_TAG != 'latest' }}
      continue-on-error: true
      shell: bash
      working-directory: ${{ inputs.WORKING_DIRECTORY }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.NPM_TOKEN }}
      run: |
        PACKAGE_NAME=$(npm pkg get name | grep -o '[^"]\+' | head -1)
        npm dist-tag rm $PACKAGE_NAME next
